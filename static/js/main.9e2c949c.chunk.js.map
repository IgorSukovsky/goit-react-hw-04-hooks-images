{"version":3,"sources":["components/imageGallery/imageGalleryItem/ImageGalleryItem.module.css","components/modal/Modal.module.css","components/loader/Loader.module.css","components/imageGallery/ImageGallery.module.css","components/button/Button.module.css","components/App.module.css","components/searchbar/Searchbar.module.css","components/services/Api.js","components/searchbar/Searchbar.js","components/loader/Loader.js","components/imageGallery/imageGalleryItem/ImageGalleryItem.js","components/imageGallery/ImageGallery.js","components/modal/Modal.js","components/button/Button.js","components/App.js","index.js"],"names":["module","exports","searchQuery","page","axios","get","then","response","data","hits","Searchbar","searchText","useState","setSearchQuery","className","style","SearchForm","onSubmit","el","preventDefault","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","value","onChange","target","LoaderComponent","styles","spinner","color","height","width","timeout","ImageGalleryItem","urlWeb","urlLarge","showModalWindow","onClick","src","alt","ImageGalleryItemImage","ImageGallery","imageData","map","index","webformatURL","largeImageURL","id","Modal","closeModalWindow","useEffect","window","addEventListener","removeEventListener","Overlay","Button","loadMore","App","setImageData","isLoading","setIsLoading","showModalStatus","setShowModalStatus","largeImage","setLargeImage","currentPage","setCurrentPage","e","Api","images","length","prevImageData","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","error","console","log","finally","addData","inputText","Loader","prevCurrentPage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9e2c949c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2FpUk\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3ffVh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3sb4t\",\"Modal\":\"Modal_Modal__3muZy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Loader_spinner__1BQ--\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2HNOo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__23AdF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Krh1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1dnsq\",\"SearchForm\":\"Searchbar_SearchForm__2swWJ\",\"SearchFormButton\":\"Searchbar_SearchFormButton__15_Mq\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2_o4M\",\"SearchFormInput\":\"Searchbar_SearchFormInput__2SbRe\"};","import axios from \"axios\";\n\nconst API_URL = \"https://pixabay.com/api/\";\nconst API_KEY = \"21692958-f8cd542283124fe4ad278ec7e\";\n\nconst getImage = (searchQuery, page) => {\n  return axios\n    .get(\n      `${API_URL}?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\n    )\n    .then((response) => response.data.hits);\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getImage };\n","import React from \"react\";\nimport { useState } from \"react\";\nimport style from \"./Searchbar.module.css\";\n// import PropTypes from \"prop-types\";\n\n// ================hooks==========\nexport default function Searchbar({ searchText }) {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  const inputValue = (el) => {\n    // el.target.value;\n    setSearchQuery(el.target.value);\n  };\n\n  const addRequest = (el) => {\n    el.preventDefault();\n    searchText(searchQuery);\n    setSearchQuery(\"\");\n  };\n\n  return (\n    <header className={style.Searchbar}>\n      <form className={style.SearchForm} onSubmit={addRequest}>\n        <button type=\"submit\" className={style.SearchFormButton}>\n          <span className={style.SearchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          className={style.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchQuery}\n          onChange={inputValue}\n        />\n      </form>\n    </header>\n  );\n}\n\n// ================hooks==========\n\n// class Searchbar extends React.Component {\n//   static propTypes = {\n//     searchText: PropTypes.func.isRequired,\n//   };\n\n//   state = {\n//     searchQuery: \"\",\n//   };\n\n//   inputValue = (el) => {\n//     let textValue = el.target.value;\n//     this.setState({ searchQuery: textValue });\n//   };\n\n//   addRequest = (el) => {\n//     el.preventDefault();\n//     this.props.searchText(this.state.searchQuery);\n//     this.setState({ searchQuery: \"\" });\n//   };\n\n//   render() {\n//     return (\n//       <header className={style.Searchbar}>\n//         <form className={style.SearchForm} onSubmit={this.addRequest}>\n//           <button type=\"submit\" className={style.SearchFormButton}>\n//             <span className={style.SearchFormButtonLabel}>Search</span>\n//           </button>\n\n//           <input\n//             className={style.SearchFormInput}\n//             type=\"text\"\n//             autoComplete=\"off\"\n//             autoFocus\n//             placeholder=\"Search images and photos\"\n//             value={this.state.searchQuery}\n//             onChange={this.inputValue}\n//           />\n//         </form>\n//       </header>\n//     );\n//   }\n// }\n\n// export default Searchbar;\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport styles from \"./Loader.module.css\";\n\nconst LoaderComponent = () => {\n  return (\n    <Loader\n      key=\"key\"\n      className={styles.spinner}\n      type=\"Puff\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={500}\n    />\n  );\n};\n\nexport default LoaderComponent;\n","import React from \"react\";\nimport style from \"./ImageGalleryItem.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ImageGalleryItem = ({ urlWeb, urlLarge, showModalWindow }) => {\n  return (\n    <li\n      className={style.ImageGalleryItem}\n      onClick={() => showModalWindow(urlLarge)}\n    >\n      <img src={urlWeb} alt=\"\" className={style.ImageGalleryItemImage} />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  urlWeb: PropTypes.string.isRequired,\n  urlLarge: PropTypes.string.isRequired,\n  showModalWindow: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import React from \"react\";\nimport ImageGalleryItem from \"./imageGalleryItem/ImageGalleryItem\";\nimport style from \"./ImageGallery.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst ImageGallery = ({ imageData, showModalWindow }) => {\n  return (\n    <ul className={style.ImageGallery}>\n      {imageData.map((data, index) => (\n        <ImageGalleryItem\n          urlWeb={data.webformatURL}\n          urlLarge={data.largeImageURL}\n          showModalWindow={showModalWindow}\n          key={data.id + index}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  imageData: PropTypes.array.isRequired,\n  showModalWindow: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","// import React, { Component } from \"react\";\n\nimport style from \"./Modal.module.css\";\n\nimport PropTypes from \"prop-types\";\n\nimport { useEffect } from \"react\";\n\n// ==========hooks=======\nexport default function Modal({ closeModalWindow, urlLarge }) {\n  useEffect(() => {\n    window.addEventListener(\"keydown\", closeModalWindow);\n\n    return () => {\n      window.removeEventListener(\"keydown\", closeModalWindow);\n    };\n  });\n\n  // useEffect(() => {\n  //   window.removeEventListener(\"keydown\", closeModalWindow);\n\n  //   return () => {\n  //     window.removeEventListener(\"keydown\", closeModalWindow);\n  //   };\n  // });\n\n  return (\n    <div onClick={closeModalWindow} className={style.Overlay}>\n      <div className={style.Modal}>\n        <img src={urlLarge} alt=\"urlLarge\" />\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  urlLarge: PropTypes.string.isRequired,\n  closeModalWindow: PropTypes.func.isRequired,\n};\n// ==========hooks=======\n\n// class Modal extends Component {\n//   state = {};\n\n//   componentDidMount() {\n//     document.addEventListener(\"keydown\", this.closeModalWindow, false);\n//   }\n\n//   componentWillUnmount() {\n//     document.removeEventListener(\"keydown\", this.closeModalWindow, false);\n//   }\n//   render() {\n//     return (\n//       <div onClick={this.props.closeModalWindow} className={style.Overlay}>\n//         <div className={style.Modal}>\n//           <img src={this.props.urlLarge} alt=\"\" />\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// Modal.propTypes = {\n//   urlLarge: PropTypes.string.isRequired,\n//   closeModalWindow: PropTypes.func.isRequired,\n// };\n\n// export default Modal;\n","import React from \"react\";\nimport style from \"./Button.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ loadMore }) => {\n  return (\n    <button id=\"scrollHeight\" className={style.Button} onClick={loadMore}>\n      Load More\n    </button>\n  );\n};\n\nButton.propTypes = {\n  loadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","// import React, { Component } from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Api from \"./services/Api\";\nimport Searchbar from \"./searchbar/Searchbar\";\nimport LoaderAnimation from \"./loader/Loader\";\nimport ImageGallery from \"./imageGallery/ImageGallery\";\nimport Modal from \"./modal/Modal\";\nimport Button from \"./button/Button\";\nimport style from \"./App.module.css\";\n\n// ====hooks=================\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [imageData, setImageData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showModalStatus, setShowModalStatus] = useState(false);\n  const [largeImage, setLargeImage] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const addData = (searchQuery, currentPage) => {\n    setIsLoading(true);\n    Api.getImage(searchQuery, currentPage)\n      .then((images) => {\n        if (images.length) {\n          setImageData((prevImageData) => [...prevImageData, ...images]);\n        }\n      })\n      .then(() => {\n        if (currentPage > 1) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: \"smooth\",\n          });\n        }\n      })\n\n      .catch((error) => console.log(error))\n      .finally(() => setIsLoading({ isLoading: false }));\n  };\n\n  const searchText = (inputText) => {\n    setSearchQuery(inputText);\n    setCurrentPage(1);\n    setImageData([]);\n  };\n\n  const showModalWindow = (urlLarge) => {\n    setLargeImage(urlLarge);\n    setShowModalStatus(true);\n    closeModalWindow();\n  };\n\n  const closeModalWindow = (e) => {\n    setShowModalStatus(!showModalStatus);\n  };\n\n  const loadMore = () => {\n    setIsLoading(true);\n    setCurrentPage((prevCurrentPage) => prevCurrentPage + 1);\n  };\n\n  useEffect(() => {\n    if (searchQuery !== \"\") {\n      addData(searchQuery, currentPage);\n    }\n  }, [searchQuery, currentPage]);\n\n  return (\n    <div className={style.App}>\n      <Searchbar searchText={searchText} />\n      {isLoading ? <LoaderAnimation /> : null}\n      <ImageGallery imageData={imageData} showModalWindow={showModalWindow} />\n      {showModalStatus && (\n        <Modal urlLarge={largeImage} closeModalWindow={closeModalWindow} />\n      )}\n      {imageData.length ? <Button loadMore={loadMore} /> : \"\"}\n    </div>\n  );\n}\n\nexport default App;\n// ====hooks the end=========\n\n// class App extends Component {\n//   state = {\n//     searchQuery: \"\",\n//     imageData: [],\n//     isLoading: false,\n//     showModalStatus: false,\n//     largeImage: \"\",\n//     currentPage: 1,\n//     loadMoreStatus: false,\n//   };\n\n// componentDidUpdate(prevProps, prevState) {\n//   const { searchQuery, currentPage } = this.state;\n//   if (\n//     prevState.searchQuery !== this.state.searchQuery ||\n//     prevState.currentPage !== this.state.currentPage\n//   ) {\n//     this.addData(searchQuery, currentPage);\n//   }\n// }\n\n// addData = (searchQuery, currentPage) => {\n//   this.setState({ isLoading: true });\n//   Api.getImage(searchQuery, currentPage)\n//     .then((imageData) =>\n//       this.setState((prevState) => {\n//         if (imageData.length) {\n//           return {\n//             imageData: prevState.imageData.concat(imageData),\n//             loadMoreStatus: true,\n//           };\n//         } else {\n//           return { loadMoreStatus: false };\n//         }\n//       })\n//     )\n//     .then(() =>\n//       window.scrollTo({\n//         top: document.documentElement.scrollHeight,\n//         behavior: \"smooth\",\n//       })\n//     )\n//     .catch((error) => console.log(error))\n//     .finally(() => this.setState({ isLoading: false }));\n// };\n\n// searchText = (inputText) => {\n//   this.setState({\n//     searchQuery: inputText,\n//     currentPage: 1,\n//     imageData: [],\n//     loadMore: true,\n//   });\n// };\n\n// showModalWindow = (urlLarge) => {\n//   this.setState({ showModalStatus: true, largeImage: urlLarge });\n// };\n\n// closeModalWindow = (e) => {\n//   if (e.keyCode === 27 || e.target.tagName === \"DIV\") {\n//     this.setState({ showModalStatus: false, largeImage: \"\" });\n//   }\n// };\n\n//   loadMore = () => {\n//     this.setState((prevState) => {\n//       if (this.state.imageData.length % 12 !== 0) {\n//         return { loadMoreStatus: false };\n//       } else return { currentPage: prevState.currentPage + 1 };\n//     });\n//   };\n\n//   render() {\n//     const {\n//       isLoading,\n//       imageData,\n//       largeImage,\n//       showModalStatus,\n//       loadMoreStatus,\n//     } = this.state;\n//     return (\n//       <div className={style.App}>\n//         <Searchbar searchText={this.searchText} />\n//         {isLoading ? <LoaderAnimation /> : null}\n//         <ImageGallery\n//           imageData={imageData}\n//           showModalWindow={this.showModalWindow}\n//         />\n//         {showModalStatus && (\n//           <Modal\n//             urlLarge={largeImage}\n//             closeModalWindow={this.closeModalWindow}\n//           />\n//         )}\n//         {loadMoreStatus && <Button loadMore={this.loadMore} />}\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}